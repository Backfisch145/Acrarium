plugins {
    id 'java'
    id 'net.ltgt.apt' version '0.10'
    id 'fi.jasoft.plugin.vaadin' version '1.1.11'
    id 'org.springframework.boot' version '1.5.4.RELEASE'
}

group 'com.faendir'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
vaadin {
    version '8.1-SNAPSHOT'
    push true
}

configurations {
    ajc
    aspects
    compile {
        extendsFrom aspects
    }
}

dependencyManagement {
    dependencies {
        dependencySet(group: 'org.aspectj', version: '1.8.10') {
            entry 'aspectjtools'
            entry 'aspectjrt'
            entry 'aspectjweaver'
        }
        dependency 'com.vaadin.external.atmosphere:atmosphere-runtime:2.4.11.vaadin1'
    }
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadin.version}"
    }
}

dependencies {
    //spring
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    //vaadin
    compile 'com.vaadin:vaadin-spring-boot-starter'
    compile 'com.vaadin:vaadin-push'
    compile 'org.vaadin.addons:popupbutton:3.0.0'
    compile('org.vaadin.addon:jfreechartwrapper:4.0.0') {
        exclude group: 'javax.servlet', module: 'servlet-api'
    }
    compile ('org.jfree:jfreechart:1.0.19') {
        exclude group:'javax.servlet', module:'servlet-api'
    }
    compile 'org.vaadin.addons:stepper:2.4.0'
    //weaving
    aspects 'org.springframework:spring-aspects'
    ajc 'org.aspectj:aspectjtools'
    compile 'org.aspectj:aspectjrt'
    compile 'org.aspectj:aspectjweaver'
    //utility
    compile 'org.codeartisans:org.json:20161124'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    compile 'net.sf.proguard:proguard-retrace:5.3.3'
    compile 'org.jetbrains:annotations:15.0'
}

configurations {
    'vaadin-client' {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('javax.validation:validation-api') with module('javax.validation:validation-api:1.0.0.GA')
            }
        }
    }
}

project.convention.getPlugin(WarPluginConvention).webAppDirName = 'src/main/resources'

war {
    archiveName = 'acra.war'
    version = version
}

compileJava {
    doLast {
        ant.taskdef(resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties', classpath: configurations.ajc.asPath)
        ant.iajc(source: sourceCompatibility, target: targetCompatibility, destDir: sourceSets.main.output.classesDir.absolutePath, maxmem: '512m', fork: 'true',
                aspectPath: configurations.aspects.asPath, inpath: sourceSets.main.output.classesDir.absolutePath,
                sourceRootCopyFilter: '**/.svn/*,**/*.java', classpath: configurations.compile.asPath) {
            sourceroots {
                sourceSets.main.java.srcDirs.each {
                    pathelement(location: it.absolutePath)
                }
            }
        }
    }
}