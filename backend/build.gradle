buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/vaadin-snapshots/"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "net.ltgt.apt" version "0.10"
    id 'fi.jasoft.plugin.vaadin' version '1.1.11'
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group 'com.faendir'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
ext {
    debug = true
    aspectjVersion = '1.8.10'
}

configurations {
    ajc
    aspects
    compile {
        extendsFrom aspects
    }
}

compileJava {
    doLast {
        ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath)
        ant.iajc(source: sourceCompatibility, target: targetCompatibility, destDir: sourceSets.main.output.classesDir.absolutePath, maxmem: "512m", fork: "true",
                aspectPath: configurations.aspects.asPath, inpath: sourceSets.main.output.classesDir.absolutePath,
                sourceRootCopyFilter: "**/.svn/*,**/*.java", classpath:configurations.compile.asPath) {
            sourceroots {
                sourceSets.main.java.srcDirs.each {
                    pathelement(location: it.absolutePath)
                }
            }
        }
    }
}

dependencies {
    //core
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile "org.springframework.boot:spring-boot-starter-cache"
    compile 'com.vaadin:vaadin-spring-boot-starter'
    aspects "org.springframework:spring-aspects"
    ajc "org.aspectj:aspectjtools:$aspectjVersion"
    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"
    //addons
    compile 'org.vaadin.addons:popupbutton:3.0.0'
    compile ('org.vaadin.addon:jfreechartwrapper:4.0.0'){
        exclude group:'javax.servlet', module:'servlet-api'
    }
    compile 'org.vaadin.addons:stepper:2.4.0'
    //utility
    compile 'org.codeartisans:org.json:20161124'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    compile 'net.sf.proguard:proguard-retrace:5.3.3'
    compile ('org.jfree:jfreechart:1.0.19') {
        exclude group:'javax.servlet', module:'servlet-api'
    }
}

configurations {
    'vaadin-client' {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('javax.validation:validation-api') with module('javax.validation:validation-api:1.0.0.GA')
            }
            //force 'javax.validation:validation-api:1.0.0.GA'
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:8.1-SNAPSHOT"
    }
}

project.convention.getPlugin(WarPluginConvention).webAppDirName = "src/main/resources"

if (!ext.debug) {
    apply from: 'releasepackaging.gradle'
}