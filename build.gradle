buildscript {
    ext {
        springBootVersion = '2.0.0.M7'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.devsoap.plugin:gradle-vaadin-plugin:SNAPSHOT-20171214"
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}
allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
        mavenCentral()
        maven { url 'https://maven.vaadin.com/vaadin-addons' }
        maven { url 'https://oss.sonatype.org/content/repositories/vaadin-snapshots/' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.devsoap.plugin.vaadin'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'

group 'com.faendir'
version = '0.2.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

vaadin {
    version '8.1.7'
    push true
}

dependencyManagement {
    dependencies {
        dependencySet(group: 'com.vaadin', version: '2.1.0.beta2') {
            entry 'vaadin-spring-boot-starter'
            entry 'vaadin-spring-boot'
            entry 'vaadin-spring'
        }
    }
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadin.version}"
    }
}

dependencies {
    //spring
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'mysql:mysql-connector-java'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework:spring-orm'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    //vaadin
    compile 'com.vaadin:vaadin-spring-boot-starter'
    compile 'com.vaadin:vaadin-push'
    compile('org.vaadin.addon:jfreechartwrapper:4.0.0') {
        exclude group: 'javax.servlet', module: 'servlet-api'
        exclude group: 'jfree'
    }
    compile 'org.jfree:jfreechart:1.5.0'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.vaadin.addons:stepper:2.4.0'
    //utility
    compile 'org.codeartisans:org.json:20161124'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    compile 'com.github.artyomcool:retrace:1.1.1'
    compile 'com.faendir.acra:acra-javacore:5.0.0-rc2'
    compile 'com.diffplug.durian:durian:3.4.0'
}

compileJava.dependsOn(processResources)

configurations {
    'vaadin-client' {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('javax.validation:validation-api') with module('javax.validation:validation-api:1.0.0.GA')
            }
        }
    }
}

war {
    archiveName = 'acra.war'
    version = version
    enabled = true
}

/*idea {
    module {
        afterEvaluate {
            scopes.COMPILE.plus -= [configurations['vaadin-client']]
            scopes.COMPILE.plus += [configurations['vaadin-client']]
        }
    }
}*/

task printScopes {
    doLast {
        idea.module.scopes.forEach{name, content->
            println name + ": " + content
        }
    }
}

