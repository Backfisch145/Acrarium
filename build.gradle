buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.devsoap.plugin:gradle-vaadin-plugin:1.3.1"
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.4.1"
    }
}
repositories {
    jcenter()
    maven { url 'https://maven.google.com' }
    maven { url 'https://maven.vaadin.com/vaadin-addons' }
    maven { url 'https://oss.sonatype.org/content/repositories/vaadin-snapshots/' }
    maven { url 'https://repo.spring.io/libs-snapshot' }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.devsoap.plugin.vaadin'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: "com.github.jk1.dependency-license-report"

group 'com.faendir'
version = '0.3.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

vaadin {
    version '8.3.2'
    push true
}

vaadinCompile {
    style 'PRETTY'
    outputDirectory 'src/main/resources'
    strict true
    widgetset 'com.faendir.acra.AppWidgetset'
}

vaadinThemeCompile {
    themesDirectory 'src/main/resources/VAADIN/themes'
}

vaadinSuperDevMode {
    noserver false
    extraArgs ""
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadin.version}"
    }
}

dependencies {
    //spring
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'mysql:mysql-connector-java'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework:spring-orm'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    //vaadin
    compile 'com.vaadin:vaadin-spring-boot-starter'
    compile 'com.vaadin:vaadin-push'
    compile('org.vaadin.addon:jfreechartwrapper:4.0.0') {
        exclude group: 'javax.servlet', module: 'servlet-api'
        exclude group: 'jfree'
    }
    compile 'com.vaadin:vaadin-icons:3.0.1'
    compile 'org.jfree:jfreechart:1.5.0'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.vaadin.addons:stepper:2.4.0'
    //utility
    compile 'org.codeartisans:org.json:20161124'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    compile 'com.faendir.acra:acra-javacore:5.0.0-rc2'
    compile 'com.diffplug.durian:durian:3.4.0'
    compile 'com.faendir.proguard:retrace:1.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
}

compileJava.dependsOn(processResources)

war {
    archiveName = 'acra.war'
    version = version
    enabled = true
}

